@model ProjectProgress.Models.CustomModelTask

<head>
    <style>
        textarea {
            width: 100%;
        }
    </style>
</head>

<body>
    <div class="alert-danger glyphicon glyphicon-thumbs-down" id="alertMessageDiv" style="text-align:center;font-size:medium; width:80%"></div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormCreateTask" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @placeholder = "Task Name ...", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @placeholder = "Task Description ...", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="hidden" name="IdCard" id="formBoardId" value="@ViewBag.Id" />

            <div class="form-group">
                <div class="col-md-12">
                    <a href="#" class="btn btn-success" id="btnCreate" style="width:30%">
                        <i class=" glyphicon glyphicon-ok"></i>
                    </a>
                    <a href="#" class="btn btn-default" id="btnExit" style="width:30%">
                        <i class="glyphicon glyphicon-remove"></i>
                    </a>
                </div>
            </div>
        </div>
    }
</body>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        $("#alertMessageDiv").hide();

     var linkSuccess = '@Url.Action("GetCards", "Cards", new { boardId = -1})';
     linkSuccess = linkSuccess.replace("-1", @ViewBag.IdBoard);

        $("#btnExit").click(function() {
            $("#listCardDiv").load(linkSuccess);
        });

        $("#btnCreate").click(function() {
            if (!$("#FormCreateTask").valid()) {
                return false;
            } else {
                var data = $("#FormCreateTask").serialize();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AddTask", "Tasks")',
                data: data,
                success: function(result) {
                    if (!result.hasError) {
                        $("#listCardDiv").load(linkSuccess);
                    } else {
                        $("#alertMessageDiv").html(result.message);
                        $("#alertMessageDiv").show();
                    }
                }
            });
            }
        });
    })

</script>
