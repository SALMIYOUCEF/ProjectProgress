@model ProjectProgress.Models.CustomModelProject

@*<script src="~/Scripts/colorpalettepicker.js"></script>*@


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormCreateProject" }))
{
    <h4>Project</h4>
    <hr />
    //<div class="alert-danger glyphicon glyphicon-thumbs-down col-md-12 hidden" id="alertCreateProjectDownDiv"></div>
    //<div class="alert-success glyphicon glyphicon-thumbs-up col-md-12 hidden" id="alertCreateProjectSuccessDiv"></div>

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <input class="hidden" name="Color" id="ColorProject" value="testValue" />
            <div class="col-md-offset-2 col-md-5" style="padding:0px 15px" id="colorpalettediv"></div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.DteConsult, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="button" value="Create" class="btn btn-block btn-success" id="btnCreateProject" />
            </div>
        </div>
    </div>
}

<script>
    $('#colorpalettediv').colorPalettePicker({
        bootstrap: 3,
        lines: 3,
        palette: ["azure", "beige", "darkkhaki", "gold", "khaki", "lightblue" , "lightcyan", "lightyellow"],
        onSelected: function (color) {
            document.getElementById('ColorProject').value = color;
        }
    });

    $(document).ready(function() {
        $("#btnCreateProject").click(function() {
            if (!$("#FormCreateProject").valid()) {
                return false;
            } else {
                var data = $("#FormCreateProject").serialize();
                $.ajax({
                    type: "POST",
                    url: 'Home/CreateProject',
                    data: data,
                    success: function(result) {
                        location.href = '@Url.Action("Index", "Home")';
                        }/*, else {
                            if (!$("#alertCreateProjectSuccessDiv").hasClass('hidden')) {
                                $("#alertCreateProjectSuccessDiv").addClass("hidden");
                            }
                            $("#alertCreateProjectDownDiv").html(result.message);
                            $("#alertCreateProjectDownDiv").find(".hidden").removeClass("hidden");
                        }
                    }*/
                });
            }
        });
    });

</script>
@*<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
